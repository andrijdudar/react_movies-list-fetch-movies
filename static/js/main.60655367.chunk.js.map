{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","setMovie","_useState5","_useState6","error","setError","_useState7","_useState8","isLoading","setLoading","_useState9","_useState10","buttonContent","setButtonContent","_Fragment","htmlFor","type","id","placeholder","cn","value","onChange","e","target","handleInputValue","onFocus","onClick","event","query","preventDefault","fetch","concat","then","res","json","catch","Response","Error","response","Poster","Title","Plot","imdbID","finally","disabled","some","m","prevMovies","_toConsumableArray","App","v","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60655367.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { ResponseError } from '../../types/ReponseError';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  movies: Movie[];\n  setMovies:React.Dispatch<React.SetStateAction<Movie[]>>;\n};\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [buttonContent, setButtonContent] = useState('Find a movie');\n  const DEFAULT_IMG\n    = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  const findMovie = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setLoading(true);\n    if (error) {\n      setError(false);\n    }\n\n    getMovie(inputValue)\n      .then((response: MovieData | ResponseError) => {\n        if ('Title' in response) {\n          const {\n            Poster,\n            Title,\n            Plot,\n            imdbID,\n          } = response;\n\n          setMovie({\n            title: Title,\n            description: Plot,\n            imgUrl: Poster === 'N/A' ? DEFAULT_IMG : Poster,\n            imdbId: imdbID,\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          });\n        } else {\n          setError(true);\n        }\n      })\n      .catch(() => setError(true))\n      .finally(() => {\n        setLoading(false);\n        setButtonContent('Search again');\n      });\n  };\n\n  const handleInputValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    if (error) {\n      setError(false);\n    }\n\n    setInputValue(value);\n  };\n\n  const handleAddMovie = () => {\n    if (movie && movies.some((m) => m.imdbId === movie.imdbId)) {\n      setMovie(null);\n      setInputValue('');\n      setButtonContent('Find a movie');\n    } else if (movie) {\n      setMovies((prevMovies) => [...prevMovies, movie]);\n      setMovie(null);\n      setInputValue('');\n      setButtonContent('Find a movie');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': error })}\n              value={inputValue}\n              onChange={(e) => handleInputValue(e)}\n              onFocus={() => setError(false)}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn({\n                'button is-light': !isLoading,\n                'button is-loading': isLoading,\n              })}\n              onClick={findMovie}\n              disabled={!inputValue}\n            >\n              {buttonContent}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=28f3145a';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={(v) => setMovies(v)}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}